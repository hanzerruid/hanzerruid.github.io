<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>双语之城的博客</title>
  
  <subtitle>Code &amp; 双语之城</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://myqaq.cn/child/"/>
  <updated>2019-05-08T06:31:02.041Z</updated>
  <id>http://myqaq.cn/child/</id>
  
  <author>
    <name>双语之城</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>helloworld</title>
    <link href="http://myqaq.cn/child/2019/05/08/helloworld/"/>
    <id>http://myqaq.cn/child/2019/05/08/helloworld/</id>
    <published>2019-05-08T06:31:02.000Z</published>
    <updated>2019-05-08T06:31:02.041Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>常用的Windows优秀软件</title>
    <link href="http://myqaq.cn/child/2019/04/08/easy-windows/"/>
    <id>http://myqaq.cn/child/2019/04/08/easy-windows/</id>
    <published>2019-04-08T09:21:43.000Z</published>
    <updated>2019-04-12T02:35:31.654Z</updated>
    
    <content type="html"><![CDATA[<p>最近下了不少Windows好用的软件，总结一下水一篇文章，下载链接见文末<br><a id="more"></a></p><h3 id="Everything"><a href="#Everything" class="headerlink" title="Everything"></a>Everything</h3><p><a href="https://www.voidtools.com/zh-cn/" target="_blank" rel="noopener">https://www.voidtools.com/zh-cn/</a><br>一款快速搜索本地文件的软件。众所周知，Windows自带的文件搜索慢到令人发指，Everything很好的解决了这一问题，全新安装的 Windows 10 (大约 120,000 个文件) 仅需 1 秒即可索引完成。<br><img src="/2019/04/08/easy-windows/everything.png"></p><h3 id="火萤酱"><a href="#火萤酱" class="headerlink" title="火萤酱"></a>火萤酱</h3><p><a href="https://j.huoying666.com/" target="_blank" rel="noopener">https://j.huoying666.com/</a><br>包含了本地检索、网络检索以及各类提升办公效率的小程序。<br>双击Ctrl，弹出检索框，用户可快速检索本地含有相应字段的所有文件；单击Tab，切换为网络检索功能，用户输入相应字段后，检索结果内会出现所有主流的搜索网站。<br><img src="/2019/04/08/easy-windows/huoyingjiang.png"></p><h3 id="CCleaner"><a href="#CCleaner" class="headerlink" title="CCleaner"></a>CCleaner</h3><p><a href="https://www.ccleaner.com/" target="_blank" rel="noopener">https://www.ccleaner.com/</a><br>摆脱各全家桶后的首选清理软件。<br>体积小，运行速度极快，可以对文件夹、历史记录、回收站等进行垃圾清理，并可对注册表进行垃圾项扫描、清理。附带软件卸载功能。 同时支持IE、Firefox。免费使用，不含任何间谍软件和垃圾程序。支持包括简体中文在内的26国语言界面。<br><img src="/2019/04/08/easy-windows/ccleaner.png"></p><h3 id="Snipaste"><a href="#Snipaste" class="headerlink" title="Snipaste"></a>Snipaste</h3><p><a href="https://www.snipaste.com/" target="_blank" rel="noopener">https://www.snipaste.com/</a><br>远胜Windows自带截图功能的轻量级截图软件。可自设使用快捷键，支持图片另存为、剪贴板以及简单的标注。<br><img src="/2019/04/08/easy-windows/Snipaste.png"></p><h3 id="potplayer"><a href="#potplayer" class="headerlink" title="potplayer"></a>potplayer</h3><p>potplayer是一款很好用的轻量级播放器。可以完美运行RMVB MKV AVI TP TS FLV MP3 MP4等格式，可外置独立字幕。此外，potplayer直接带了书签功能，且可以自动保存书签到视频文件夹。<br><img src="/2019/04/08/easy-windows/potplayer.png"></p><h3 id="IDM"><a href="#IDM" class="headerlink" title="IDM"></a>IDM</h3><p><a href="http://www.internetdownloadmanager.com/" target="_blank" rel="noopener">http://www.internetdownloadmanager.com/</a><br>最好的下载软件不解释，支持chrome、firefox插件功能。<br><img src="/2019/04/08/easy-windows/idm.png"></p><h3 id="seer"><a href="#seer" class="headerlink" title="seer"></a>seer</h3><p><a href="http://www.1218.io/" target="_blank" rel="noopener">http://www.1218.io/</a><br>文件预览软件。速度比Windows自带的文件预览快，选中后按空格键预览，支持图片、视频、office文件预览。<br><img src="/2019/04/08/easy-windows/seer.png"></p><h3 id="7-zip"><a href="#7-zip" class="headerlink" title="7-zip"></a>7-zip</h3><p>好用的压缩/解压软件，压缩倍数高，速度快。<br><img src="/2019/04/08/easy-windows/7zip.png"></p><h3 id="chrome浏览器"><a href="#chrome浏览器" class="headerlink" title="chrome浏览器"></a>chrome浏览器</h3><p><a href="https://www.google.com/chrome/" target="_blank" rel="noopener">https://www.google.com/chrome/</a><br>一款快速、安全且免费的网络浏览器,能很好地满足新型网站对浏览器的要求。各种插件能将你牢牢捆绑在这里。<br><img src="/2019/04/08/easy-windows/chrome.png"></p><h3 id="foobar2000-foobaka"><a href="#foobar2000-foobaka" class="headerlink" title="foobar2000(foobaka)"></a>foobar2000(foobaka)</h3><p><a href="http://www.foobar2000.com.cn/interface/showimg.php?lang=cn&amp;id=74" target="_blank" rel="noopener">http://www.foobar2000.com.cn/interface/showimg.php?lang=cn&amp;id=74</a><br>foobar是一款优质的本地音乐播放器，支持添加各种个性化插件，foobaka则是由贴吧网友唐人清风制作的猛男专用版，适用于喜欢听本地音乐的人。<br><img src="/2019/04/08/easy-windows/foobar.png"></p><h3 id="小丸工具箱"><a href="#小丸工具箱" class="headerlink" title="小丸工具箱"></a>小丸工具箱</h3><p><a href="https://maruko.appinn.me/" target="_blank" rel="noopener">https://maruko.appinn.me/</a><br>小丸工具箱是一款用于处理音视频等多媒体文件的软件。是一款x264、ffmpeg等命令行程序的图形界面。它的目标是让视频压制变得简单、轻松。<br>主要功能：<br>高质量的H264+AAC视频压制；ASS/SRT字幕内嵌到视频；AAC/WAV/FLAC/ALAC音频转换；MP4/MKV/FLV的无损抽取和封装。<br><img src="/2019/04/08/easy-windows/xiaowan.png"><br>分享链接<br><a href="https://pan.baidu.com/s/1Q-Bebps_6RF3DB1Kv4xxCA" target="_blank" rel="noopener">https://pan.baidu.com/s/1Q-Bebps_6RF3DB1Kv4xxCA</a><br>提取码：vr89 </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近下了不少Windows好用的软件，总结一下水一篇文章，下载链接见文末&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="个人博客" scheme="http://myqaq.cn/child/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="软件介绍" scheme="http://myqaq.cn/child/tags/%E8%BD%AF%E4%BB%B6%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
  <entry>
    <title>Linux Ubuntu操作汇总</title>
    <link href="http://myqaq.cn/child/2019/04/04/ubuntu/"/>
    <id>http://myqaq.cn/child/2019/04/04/ubuntu/</id>
    <published>2019-04-04T02:27:43.000Z</published>
    <updated>2019-04-16T08:04:40.134Z</updated>
    
    <content type="html"><![CDATA[<p>每次开Linux虚拟机都会遇到各种繁琐的操作，在这里总结一下<br><a id="more"></a></p><h1 id="一-共享文件夹"><a href="#一-共享文件夹" class="headerlink" title="一. 共享文件夹"></a>一. 共享文件夹</h1><p>设置共享文件夹（固定挂载无法使用）<br><img src="/2019/04/04/ubuntu/sharefile.png"><br>在终端输入<br><code>sudo mount -t vboxsf  共享文件夹的名字(RNA_seq) 虚拟机的挂载点（/mnt/）</code><br>完成挂载</p><h1 id="二-root操作"><a href="#二-root操作" class="headerlink" title="二. root操作"></a>二. root操作</h1><p>进入root<br><code>su</code><br>开放33001端口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p udp --dport 33001 -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -p udp --dport 33001 -j ACCEPT</span><br><span class="line">iptables -L -n</span><br></pre></td></tr></table></figure></p><p>退出root<br><code>exit</code><br><img src="/2019/04/04/ubuntu/root.png"></p><h1 id="三-解压与压缩"><a href="#三-解压与压缩" class="headerlink" title="三. 解压与压缩"></a>三. 解压与压缩</h1><p>1)对于.tar结尾的文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xf all.tar</span><br></pre></td></tr></table></figure></p><p>2)对于.gz结尾的文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gzip -d all.gz</span><br><span class="line">gunzip all.gz</span><br></pre></td></tr></table></figure></p><p>3)对于.tgz或.tar.gz结尾的文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xzf all.tar.gz</span><br><span class="line">tar -xzf all.tgz</span><br></pre></td></tr></table></figure></p><p>4)对于.bz2结尾的文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bzip2 -d all.bz2</span><br><span class="line">bunzip2 all.bz2</span><br></pre></td></tr></table></figure></p><p>5)对于tar.bz2结尾的文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xjf all.tar.bz2</span><br></pre></td></tr></table></figure></p><p>6)对于.Z结尾的文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uncompress all.Z</span><br></pre></td></tr></table></figure></p><p>7)对于.tar.Z结尾的文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xZf all.tar.z</span><br></pre></td></tr></table></figure></p><h1 id="四-软件卸载"><a href="#四-软件卸载" class="headerlink" title="四. 软件卸载"></a>四. 软件卸载</h1><p> 1、在终端里 apt-get安装的软件：<br>安装软件<code>sudo  apt-get install softname1 softname2softname3……</code><br>卸载软件 <code>sudo apt-get remove softname1 softname2 softname3……</code><br>卸载并清除配置<code>sudo  apt-get remove --purgesoftname1</code><br>更新软件信息数据库 <code>sudo apt-get update</code><br>进行系统升级<code>sudo  apt-get upgrade, sudo apt-get distupgrade</code><br>搜索软件包 <code>sudo apt-cache search softname1 softname2 softname3……</code></p><p>2、安装的deb包要用此方法：<br>安装deb软件包 <code>dpkg -i xxx.deb</code><br>删除软件包 <code>dpkg -r xxx.deb</code><br>连同配置文件一起删除 <code>dpkg -r --purge xxx.deb</code><br>查看软件包信息 <code>dpkg -info xxx.deb</code><br>查看文件拷贝详情 <code>dpkg -L xxx.deb</code><br>查看系统中已安装软件包信息 <code>dpkg -l</code><br>重新配置软件包 <code>dpkg-reconfigure xxx</code></p><p>4、在“synaptic pakagemanager”里:<br>点搜索，输入软件名<br>在需要安装或卸载的软件上右击－点标记－最后点应用</p><p>5、现在还可以在 software center里面,直接卸载。</p><p>6、卸载源代码编译的的软件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd 源代码目录</span><br><span class="line">make clean</span><br><span class="line">./configure</span><br><span class="line">（make）</span><br><span class="line">make uninstall</span><br><span class="line">rm -rf 目录</span><br></pre></td></tr></table></figure></p><p>清理系统：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get autoclean</span><br><span class="line">sudo apt-get clean</span><br><span class="line">sudo apt-get autoremove</span><br></pre></td></tr></table></figure></p><p>（或使用ubuntu-tweak清理）</p><p>五、ubuntu子系统修改sources.list<br>sources.list(etc/apt)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure></p><p><code>sudo chmod -R 777 /etc/apt/sources.list</code></p><p>六、ubuntu子系统java安装</p><p>安装Java 8 ( 支持 Ubuntu 10.04 - Ubuntu 16.04 )</p><p>1、如果你在 Ubuntu 软件中心安装过 OpenJDK，请先使用如下命令将其删除：</p><p>sudo apt-get purge openjdk*</p><p>2、添加 PPA 源</p><p>sudo add-apt-repository ppa:webupd8team/java</p><p>3、更新下源数据库</p><p>sudo apt-get update</p><p>4、安装 Oracle Java 8</p><p>sudo apt-get install oracle-java8-installer</p><p>5、查看版本：</p><p>java -version</p><p>6、设置 Java 8 环境变量：</p><p>sudo apt-get install oracle-java8-set-default</p><p>7、java版本切换</p><p>sudo update-java-alternatives -s java-8-oracle</p><p>8、卸载jdk</p><p>sudo apt-get remove oracle-java8-installer</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;每次开Linux虚拟机都会遇到各种繁琐的操作，在这里总结一下&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://myqaq.cn/child/tags/Linux/"/>
    
      <category term="虚拟机" scheme="http://myqaq.cn/child/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>基因芯片分析</title>
    <link href="http://myqaq.cn/child/2019/03/22/gene-chip/"/>
    <id>http://myqaq.cn/child/2019/03/22/gene-chip/</id>
    <published>2019-03-22T03:21:43.000Z</published>
    <updated>2019-04-02T08:13:57.795Z</updated>
    
    <content type="html"><![CDATA[<p>基因芯片分析是生物信息学的重要应用之一，今天总结其中一种简单的使用方法。<br><a id="more"></a></p><h1 id="一-获取数据"><a href="#一-获取数据" class="headerlink" title="一. 获取数据"></a>一. 获取数据</h1><p>样本数据选取了论文<a href="https://www.ncbi.nlm.nih.gov/pubmed/22915760" target="_blank" rel="noopener">Molecular subsets of mantle cell lymphoma defined by the IGHV mutational status and SOX11 expression have distinct biologic and clinical features.</a>的实验数据，该套数据的下载网址：<br><a href="https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE36000&amp;format=file" target="_blank" rel="noopener">https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE36000&amp;format=file</a><br>从NCBI的GEO数据库获取数据的全部信息<br><a href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE36000" target="_blank" rel="noopener">https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE36000</a><br><img src="/2019/03/22/gene-chip/GSMsource.png"><br>这张芯片主要是研究来自Mantle细胞淋巴瘤（MCL）患者的B细胞淋巴细胞的免疫球蛋白重链可变（IGHV）基因的突变（MUT）与非突变(UNMUT)<br>芯片共38张，其中24张为突变型（MUT），14张为非突变型（UNMUT）</p><h1 id="二-数据预处理"><a href="#二-数据预处理" class="headerlink" title="二. 数据预处理"></a>二. 数据预处理</h1><p>过程梳理<br>质量检测——背景处理、归一化、汇总——探针注释——合并重复探针</p><h2 id="1-质量检验"><a href="#1-质量检验" class="headerlink" title="1.质量检验"></a>1.质量检验</h2><p>数据读入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#初次使用，下载 CLL package</span><br><span class="line">#library(BiocInstaller)</span><br><span class="line">#biocLite(&quot;CLL&quot;)</span><br><span class="line">#biocLite(&quot;simpleaffy&quot;)</span><br><span class="line">#install.packages(&quot;scales&quot;)</span><br><span class="line"></span><br><span class="line">library(affy)</span><br><span class="line">library(tcltk)</span><br><span class="line">library(gcrma)</span><br><span class="line">library(RColorBrewer)</span><br><span class="line">library(simpleaffy)</span><br><span class="line">library(CLL)</span><br><span class="line"></span><br><span class="line">setwd(&quot;E:/生信/大三/转录组学&quot;)</span><br><span class="line">geneCELs=list.celfiles(&apos;E:/生信/大三/转录组学/GSE36000_RAW/&apos;,full.name=T)</span><br><span class="line">data.raw&lt;-ReadAffy(filenames=geneCELs)</span><br><span class="line">#basename(geneCELs)     #查看文件名</span><br><span class="line">#由于数据分布本身极不规则，这里通过sublime text的优质工具便捷导入名称</span><br><span class="line">treats &lt;- strsplit(&quot;UNMUT UNMUT UNMUT UNMUT UNMUT MUT MUT UNMUT UNMUT UNMUT MUT UNMUT MUT MUT MUT MUT MUT MUT MUT MUT MUT MUT UNMUT MUT MUT MUT MUT MUT MUT UNMUT UNMUT MUT MUT MUT MUT MUT UNMUT UNMUT&quot;, &quot; &quot;)[[1]]</span><br><span class="line">snames &lt;- strsplit(&quot;UNMUT1 UNMUT2 UNMUT3 UNMUT4 UNMUT5 MUT1 MUT2 UNMUT6 UNMUT7 UNMUT8 MUT3 UNMUT9 MUT4 MUT5 MUT6 MUT7 MUT8 MUT9 MUT10 MUT11 MUT12 MUT13 UNMUT10 MUT14 MUT15 MUT16 MUT17 MUT18 MUT19 UNMUT11 UNMUT12 MUT20 MUT21 MUT22 MUT23 MUT24 UNMUT13 UNMUT14&quot;, &quot; &quot;)[[1]]</span><br><span class="line">sampleNames(data.raw) &lt;- snames</span><br></pre></td></tr></table></figure></p><h3 id="step0-首先对芯片进行质量检测-是否存在spatial-artifact"><a href="#step0-首先对芯片进行质量检测-是否存在spatial-artifact" class="headerlink" title="step0.首先对芯片进行质量检测(是否存在spatial artifact)"></a>step0.首先对芯片进行质量检测(是否存在spatial artifact)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">for (i in 1:length(sampleNames(data.raw)))&#123;</span><br><span class="line">  name = paste(&quot;image&quot;,sampleNames(data.raw)[i],&quot;.jpg&quot;,sep=&quot;&quot;)</span><br><span class="line">  jpeg(name)</span><br><span class="line">  image(data.raw[,i])</span><br><span class="line">  dev.off()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面为MUT1芯片，所有芯片均完好，无spatial artifact<br><img src="/2019/03/22/gene-chip/imageMUT1.jpg" title="MUT1"></p><h2 id="2-标准化"><a href="#2-标准化" class="headerlink" title="2.标准化"></a>2.标准化</h2><h3 id="step1-背景处理、归一化：MAS5-rma-gcrma"><a href="#step1-背景处理、归一化：MAS5-rma-gcrma" class="headerlink" title="step1.背景处理、归一化：MAS5/rma/gcrma"></a>step1.背景处理、归一化：MAS5/rma/gcrma</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># mas5</span><br><span class="line">data.raw.mas5 &lt;- mas5(data.raw)</span><br><span class="line">data.mas5.Matrix &lt;- exprs(data.raw.mas5)    #</span><br><span class="line"># rma</span><br><span class="line">data.raw.rma &lt;- rma(data.raw)</span><br><span class="line">data.rma.Matrix &lt;- exprs(data.raw.rma)</span><br><span class="line"># gcrma</span><br><span class="line">data.raw.gcrma &lt;- gcrma(data.raw)</span><br><span class="line">data.gcrma.Matrix &lt;- exprs(data.raw.gcrma)</span><br><span class="line">## boxplot</span><br><span class="line">boxplot(data.mas5.Matrix, las=3, ylim=c(0,600), main=&quot;MAS 5.0&quot;)</span><br><span class="line">boxplot(data.rma.Matrix, las=3, ylim=c(0,8), main=&quot;RMA&quot;)</span><br><span class="line">boxplot(data.gcrma.Matrix, las=3, ylim=c(0,8), main=&quot;gcRMA&quot;)</span><br></pre></td></tr></table></figure><img src="/2019/03/22/gene-chip/mas.png" title="MAS boxplot"><img src="/2019/03/22/gene-chip/rma.png" title="RMA boxplot"><img src="/2019/03/22/gene-chip/gcrma.png" title="gcRMA boxplot"><h6 id="RMA拖尾情况最少，相对而言最好"><a href="#RMA拖尾情况最少，相对而言最好" class="headerlink" title="RMA拖尾情况最少，相对而言最好"></a>RMA拖尾情况最少，相对而言最好</h6><h2 id="3-过滤探针"><a href="#3-过滤探针" class="headerlink" title="3.过滤探针"></a>3.过滤探针</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">calls &lt;- mas5calls(data.raw) # 获得探针的PMA信息</span><br><span class="line">calls &lt;- exprs(calls) # 提取包含探针的PMA信息的表达矩阵</span><br><span class="line">head(calls)</span><br><span class="line">present &lt;- rowSums(calls == &quot;P&quot;) # 统计每个探针在所有样本中分类为&quot;P&quot;的个数</span><br><span class="line">present &lt;- which(present != 0) # 提取至少在一个样本中表达的探针</span><br><span class="line">rmaFiltered &lt;- data.raw.rma[present,] # 留下至少在一个样本中表达的探针</span><br><span class="line">#nrow(rmaFiltered)</span><br><span class="line">#Features </span><br><span class="line">#   38652</span><br></pre></td></tr></table></figure><img src="/2019/03/22/gene-chip/rmaout.png" title="RMA操作的输出"><h2 id="4-探针注释"><a href="#4-探针注释" class="headerlink" title="4.探针注释"></a>4.探针注释</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">library(GEOquery)</span><br><span class="line">gse36&lt;-getGEO(&apos;GSE36000&apos;,destdir =&quot;.&quot;) #根据GSE号来下载数据，下载_series_matrix.txt.gz</span><br><span class="line">gpl570&lt;-getGEO(&apos;GPL570&apos;,destdir =&quot;.&quot;)  #根据GPL号下载的是芯片设计的信息, soft文件</span><br><span class="line"></span><br><span class="line">colnames(Table(gpl570))</span><br><span class="line"> #提取探针注释信息，保留第1列和第4列</span><br><span class="line">genename &lt;- Table(gpl515)[,c(1,4)]</span><br><span class="line">exprSet &lt;- as.data.frame(exprs(gse382[[1]]))# 得到表达矩阵，行名为ID，需要转换</span><br><span class="line">#转换ID为gene name</span><br><span class="line">exprSet$ID &lt;- rownames(exprSet)</span><br><span class="line">express &lt;- merge(x = genename, y = exprSet, by = &quot;ID&quot;)</span><br><span class="line">express$ID =NULL</span><br></pre></td></tr></table></figure><h2 id="5-合并重复探针"><a href="#5-合并重复探针" class="headerlink" title="5. 合并重复探针"></a>5. 合并重复探针</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#安装hgu133plus2.db包</span><br><span class="line">#if (!requireNamespace(&quot;BiocManager&quot;, quietly = TRUE))</span><br><span class="line">#    install.packages(&quot;BiocManager&quot;)</span><br><span class="line">#BiocManager::install(&quot;hgu133plus2.db&quot;, version = &quot;3.8&quot;)</span><br><span class="line"></span><br><span class="line">library(hgu133plus2.db) #加载芯片注释包</span><br><span class="line">columns(hgu133plus2.db) #查看芯片注释包提供的注释信息</span><br><span class="line">probe2symbol &lt;- toTable(hgu133plus2SYMBOL) #提取注释信息，这里选择GENESYMBOL进行注释。也可以选择其他ID进行注释，详情请见注释包的技术支持文档。</span><br><span class="line">exprSet &lt;- as.data.frame(exprs(rmaFiltered)) #提取表达矩阵，转换为data.frame对象</span><br><span class="line">head(exprSet) #查看表达矩阵</span><br></pre></td></tr></table></figure><img src="/2019/03/22/gene-chip/exprSet.png" title="exprSet屏幕回显"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">exprSet$probe_id &lt;- rownames(exprSet) #将行名转化为probe_id</span><br><span class="line"></span><br><span class="line">probeset &lt;- rownames(exprSet) #提取行名为探针名</span><br><span class="line">Symbol &lt;- as.character(as.list(hgu133plus2SYMBOL[probeset])) #提取探针对应的GENESYMBOL</span><br><span class="line">exprSet_symbol &lt;- cbind(Symbol,exprSet)</span><br><span class="line"></span><br><span class="line">#采取数据中位数代替重复值</span><br><span class="line">exprSet_symbol &lt;- aggregate(x = exprSet_symbol[,-1],by = list(exprSet_symbol$Symbol), FUN = median)</span><br><span class="line">exprSet_symbol$probe_id &lt;- NULL</span><br><span class="line">dim(exprSet_symbol)</span><br><span class="line">#[1] 15672    39</span><br></pre></td></tr></table></figure><img src="/2019/03/22/gene-chip/pretreat_result.png" title="预处理最终结果"><h5 id="注意，此处的生成数据是经过RMA修正的，因此是求log后的值"><a href="#注意，此处的生成数据是经过RMA修正的，因此是求log后的值" class="headerlink" title="注意，此处的生成数据是经过RMA修正的，因此是求log后的值"></a>注意，此处的生成数据是经过RMA修正的，因此是求log后的值</h5><h1 id="三-基因的差异表达分析"><a href="#三-基因的差异表达分析" class="headerlink" title="三. 基因的差异表达分析"></a>三. 基因的差异表达分析</h1><p>将数据处理成纯数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exprSet_symbol_1&lt;-exprSet_symbol[,-1]</span><br><span class="line">rownames(exprSet_symbol_1)&lt;-exprSet_symbol[,1]</span><br></pre></td></tr></table></figure></p><h3 id="1-t-test"><a href="#1-t-test" class="headerlink" title="1. t.test"></a>1. t.test</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">unmut&lt;-exprSet_symbol_1[,c(1,2,3,4,5,8,9,10,12,23,30,31,37,38)]</span><br><span class="line">mut&lt;-exprSet_symbol_1[,c(6,7,11,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,32,33,34,35,36)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for(i in 1:nrow(exprSet_symbol_1))&#123;</span><br><span class="line">    p_value[i]&lt;-t.test(unmut[i,],mut[i,])$p.value</span><br><span class="line">&#125;</span><br><span class="line">exprSet_symbol_1$p_value&lt;-p_value</span><br><span class="line">exprSet_symbol_p_005 &lt;- exprSet_symbol_1[p_value&lt;0.05,]</span><br><span class="line">#dim(exprSet_symbol_p)</span><br><span class="line">#[1] 2503   39</span><br><span class="line">exprSet_symbol_p_001 &lt;- exprSet_symbol_1[p_value&lt;0.01,]</span><br><span class="line">#dim(exprSet_symbol_p)</span><br><span class="line">#[1] 969  39</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">exprSet_symbol_unlog&lt;-2^exprSet_symbol_1</span><br><span class="line">unmut&lt;-exprSet_symbol_unlog[,c(1,2,3,4,5,8,9,10,12,23,30,31,37,38)]</span><br><span class="line">mut&lt;-exprSet_symbol_unlog[,c(6,7,11,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,32,33,34,35,36)]</span><br></pre></td></tr></table></figure><h3 id="2-倍数法"><a href="#2-倍数法" class="headerlink" title="2.倍数法"></a>2.倍数法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">unmut_avg&lt;-apply(unmut,1,mean)</span><br><span class="line">mut_avg&lt;-apply(mut,1,mean)</span><br><span class="line">exprSet_symbol_1$unmut_avg&lt;-unmut_avg</span><br><span class="line">exprSet_symbol_1$mut_avg&lt;-mut_avg</span><br><span class="line">exprSet_symbol_fold_2 &lt;- exprSet_symbol_1[2^(log2(unmut_avg/mut_avg))&gt;2,]</span><br><span class="line"># dim(exprSet_symbol_fold)</span><br><span class="line"># [1] 407  41</span><br><span class="line">exprSet_symbol_fold_3 &lt;- exprSet_symbol_1[2^(log2(unmut_avg/mut_avg))&gt;3,]</span><br><span class="line"># dim(exprSet_symbol_fold_3)</span><br><span class="line"># [1] 145  43</span><br></pre></td></tr></table></figure><h3 id="3-z值"><a href="#3-z值" class="headerlink" title="3.z值"></a>3.z值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">exprSet_symbol_1$avg_cha&lt;-abs(unmut_avg-mut_avg)</span><br><span class="line">exprSet_symbol_z&lt;-vector(length=nrow(exprSet_symbol_1))</span><br><span class="line">for(i in 1:nrow(exprSet_symbol_1))&#123;</span><br><span class="line">    exprSet_symbol_z[i]&lt;-(exprSet_symbol_1$avg_cha[i]-mean(exprSet_symbol_1$avg_cha))/sd(exprSet_symbol_1$avg_cha)</span><br><span class="line">&#125;</span><br><span class="line">exprSet_symbol_1$exprSet_symbol_z&lt;-abs(exprSet_symbol_z)</span><br><span class="line">exprSet_symbol_zscore_196&lt;-exprSet_symbol_1[exprSet_symbol_z&gt;1.96,]</span><br><span class="line"># dim(exprSet_symbol_zscore)</span><br><span class="line"># [1] 305  43</span><br><span class="line">exprSet_symbol_zscore_258&lt;-exprSet_symbol_1[exprSet_symbol_z&gt;2.58,]</span><br><span class="line"># dim(exprSet_symbol_zscore_258)</span><br><span class="line"># [1] 224  43</span><br></pre></td></tr></table></figure><h3 id="4-筛选"><a href="#4-筛选" class="headerlink" title="4.筛选"></a>4.筛选</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#t 0.05  倍数 2</span><br><span class="line">exprSet_symbol_t005_fold2&lt;-exprSet_symbol_fold_2[exprSet_symbol_fold_2$p_value&lt;0.05,]</span><br><span class="line"># dim(exprSet_symbol_t005_fold2)</span><br><span class="line"># [1] 283  43</span><br><span class="line"></span><br><span class="line">#t 0.05  倍数 3</span><br><span class="line">exprSet_symbol_t005_fold3&lt;-exprSet_symbol_fold_3[exprSet_symbol_fold_3$p_value&lt;0.05,]</span><br><span class="line"># dim(exprSet_symbol_t005_fold3)</span><br><span class="line"># [1] 116  43</span><br><span class="line"></span><br><span class="line">#t 0.05  z 0.05</span><br><span class="line">exprSet_symbol_t005_z005&lt;-exprSet_symbol_p_005[exprSet_symbol_p_005$exprSet_symbol_z&gt;1.96,]</span><br><span class="line"># dim(exprSet_symbol_t005_z005)</span><br><span class="line"># [1] 174  43</span><br><span class="line"></span><br><span class="line">#t 0.05  z 0.01</span><br><span class="line">exprSet_symbol_t005_z001&lt;-exprSet_symbol_p_005[exprSet_symbol_p_005$exprSet_symbol_z&gt;2.58,]</span><br><span class="line"># dim(exprSet_symbol_t005_z001)</span><br><span class="line"># [1] 141  43</span><br></pre></td></tr></table></figure><p>（P=0.01&amp;&amp;倍数法3）、（P=0.01&amp;&amp;Z值法0.05）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">exprSet_symbol_t001_fold3&lt;-exprSet_symbol_fold_3[exprSet_symbol_fold_3$p_value&lt;0.01,]</span><br><span class="line">exprSet_symbol_t001_fold3_z005&lt;-exprSet_symbol_t001_fold3[exprSet_symbol_t001_fold3$exprSet_symbol_z&gt;1.96,]</span><br><span class="line"># dim(exprSet_symbol_t001_fold3_z005)</span><br><span class="line"># [1] 13 43</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基因芯片分析是生物信息学的重要应用之一，今天总结其中一种简单的使用方法。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="R语言" scheme="http://myqaq.cn/child/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="生物信息" scheme="http://myqaq.cn/child/tags/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF/"/>
    
  </entry>
  
  <entry>
    <title>R语言线性回归总结</title>
    <link href="http://myqaq.cn/child/2019/01/10/R-Linear-regression/"/>
    <id>http://myqaq.cn/child/2019/01/10/R-Linear-regression/</id>
    <published>2019-01-10T08:24:18.017Z</published>
    <updated>2019-03-02T14:00:38.893Z</updated>
    
    <content type="html"><![CDATA[<p>R语言是一种十分方便的统计学编程语言，本文主要介绍通过R语言进行<em>线性回归</em>，并列举了几个R语言在<em>线性回归</em>中的应用。</p><a id="more"></a><hr><blockquote><p>那么接下来是干货时间 QAQ</p></blockquote><hr><h4 id="线性回归计算分为以下几点"><a href="#线性回归计算分为以下几点" class="headerlink" title="线性回归计算分为以下几点"></a>线性回归计算分为以下几点</h4><p>一、判断是否符合线性回归，并求出回归方程<br><code>lm.sol</code> + <code>summary(lm.sol)</code>计算各项的Pr值(即t检验的p值)，<br>Pr&lt; 0.05表示该项系数与t检验默认值(mu=0)之间存在显著差异（即系数显著不为零），此时符合回归，Estimate对应的值为该项系数</p><p>二、预测<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lm.pred&lt;-predict(lm.sol, data.frame(x = 0.16), interval=&quot;prediction&quot;, level=0.95)</span><br></pre></td></tr></table></figure></p><p>For example<img src="/2019/01/10/R-Linear-regression/image005.png" title="残差"><br>输出的三个值分别为预估值，区间下限和区间上限</p><p>三、查找偏差值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">y.res&lt;-resid(lm.sol)</span><br><span class="line">plot(y.res)</span><br></pre></td></tr></table></figure></p><p>四、逐步回归<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lm.step&lt;-step(lm.sol)</span><br><span class="line">drop1(lm.step)  #查看每项的AIC</span><br><span class="line">summary(lm.step)</span><br></pre></td></tr></table></figure></p><p>五、画拟合曲线<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x&lt;-seq(min(X1), max(X1), len=200)</span><br><span class="line">y&lt;-predict(lm2.sol, data.frame(X1=x))</span><br><span class="line">plot(Y~X1); lines(x,y)</span><br></pre></td></tr></table></figure></p><p>六、残差图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">y.res&lt;-resid(lm.sol)</span><br><span class="line">y.rst&lt;-rstandard(lm.sol) #标准化</span><br><span class="line">y.fit&lt;-predict(lm.sol)</span><br><span class="line">#普通残差图</span><br><span class="line">plot(y.res~y.fit)</span><br><span class="line">#标准化残差图</span><br><span class="line">plot(y.rst~y.fit)</span><br></pre></td></tr></table></figure></p><p>漏斗形-&gt;异方差  &amp;&amp;  无规律—&gt;同方差(正常情况)</p><img src="/2019/01/10/R-Linear-regression/image001.png" title="ex1"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x&lt;-scan()</span><br><span class="line">5.1 1907 3.5 1287 7.1 2700 6.2 2373 8.8 3260 7.8 3000 4.5 1947 5.6 2273 8.0 3113 6.4 2493</span><br><span class="line"></span><br><span class="line">dim(x)&lt;-c(2,10)</span><br><span class="line">x&lt;-t(x)</span><br><span class="line">colnames(x)&lt;-c(&quot;X&quot;,&quot;Y&quot;)</span><br><span class="line">x&lt;-as.data.frame(x)</span><br><span class="line">plot(x$X,x$Y)</span><br></pre></td></tr></table></figure><p>(1)<img src="/2019/01/10/R-Linear-regression/Rplot.png" title="ex1"><br>呈线性关系<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lm.sol&lt;-lm(Y~X,data=x)</span><br><span class="line">summary(lm.sol)</span><br></pre></td></tr></table></figure></p><img src="/2019/01/10/R-Linear-regression/Run1.png" title="ex1"><p>(2 &amp; 3)<br>y=364.18x+140.95<br>回归数据的显著性检验是指看Pr值是否&lt;0.05,Pr&lt;0.05时为显著的<br>X的系数显著，常数项系数不显著<br><code>abline(lm.sol)</code><br><img src="/2019/01/10/R-Linear-regression/Rplot1.png" title="ex1"><br>(4)<br>已知其中部分数据，预测剩余值用predict<br>predict(lm对象,新数据的data.frame ,interval=”prediction”)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">new&lt;-data.frame(X=7)</span><br><span class="line">lm.pred&lt;-predict(lm.sol,new,interval=&quot;prediction&quot;)</span><br></pre></td></tr></table></figure></p><p>#Y(7)= 2690.227, [2454.971,2925.484]</p><hr><img src="/2019/01/10/R-Linear-regression/image006.png" title="ex2"><img src="/2019/01/10/R-Linear-regression/image007.png" title="ex2"><p>(1)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">x&lt;-scan()</span><br><span class="line">0.4 52 158 64 0.4 23 163 60 3.1 19 37 71 0.6 34 157 61 4.7 24 59 54 1.7 65 123 77 9.4 44 46 81 </span><br><span class="line">10.1 31 117 93 11.6 29 173 93 12.6 58 112 51 10.9 37 111 76 23.1 46 114 96 23.1 50 134 77</span><br><span class="line">21.6 44 73 93 23.1 56 168 95 1.9 36 143 54 26.8 58 202 168 29.9 51 124 99</span><br><span class="line"></span><br><span class="line">dim(x)&lt;-c(4,18)</span><br><span class="line">x&lt;-t(x)</span><br><span class="line">colnames(x)&lt;-c(&quot;x1&quot;,&quot;x2&quot;,&quot;x3&quot;,&quot;y&quot;)</span><br><span class="line">x&lt;-data.frame(x)</span><br><span class="line">lm.sol&lt;-lm(y~x1+x2+x3,data=x)</span><br><span class="line">summary(lm.sol)</span><br></pre></td></tr></table></figure></p><img src="/2019/01/10/R-Linear-regression/Run2.png" title="ex2"><p>(2)<br>Pr&lt;0.05表示显著<br>x1和常数项显著,其他不显著<br>(3)<br><code>lm.step&lt;-step(lm.sol)</code><br><img src="/2019/01/10/R-Linear-regression/Run3.png" title="ex2"></p><p>#x2被删去<br><code>summary(lm.step)</code><br><img src="/2019/01/10/R-Linear-regression/Run4.png" title="ex2"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lm.final&lt;-lm(y~x1,data = x)</span><br><span class="line">summary(lm.final)</span><br></pre></td></tr></table></figure></p><img src="/2019/01/10/R-Linear-regression/Run5.png" title="ex2"><p>p&lt;0.05<br>可以,y = 1.84x + 59.25</p><hr><img src="/2019/01/10/R-Linear-regression/image008.png" title="ex3"><p>(1)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">x&lt;-scan()</span><br><span class="line">1 0.6 1 1.6 1 0.5 1 1.2 2 2.0 2 1.3 2 2.5 3 2.2 3 2.4 3 1.2 4 3.5 4 4.1 4 5.1 5 5.7 6 3.4 </span><br><span class="line">6 9.7 6 8.6 7 4.0 7 5.5 7 10.5 8 17.5 8 13.4 8 4.5 9 30.4 11 12.4 12 13.4 12 26.2 12 7.4</span><br><span class="line"></span><br><span class="line">dim(x)&lt;-c(2,28)</span><br><span class="line">x&lt;-t(x)</span><br><span class="line">colnames(x)&lt;-c(&quot;x&quot;,&quot;y&quot;)</span><br><span class="line">x&lt;-data.frame(x)</span><br><span class="line">plot(x$x,x$y)</span><br><span class="line">lm.sol&lt;-lm(y~x,data=x)</span><br><span class="line">summary(lm.sol)</span><br></pre></td></tr></table></figure></p><img src="/2019/01/10/R-Linear-regression/Run6.png" title="ex3"><p><code>abline(lm.sol)</code><br><img src="/2019/01/10/R-Linear-regression/image009.png" title="ex3"></p><p>(2)<br>Pr的值为T检验的P值,F-statistic的p-value表示F检验的p值,两者都是&lt; 0.05时通过<br>Pr常数项&gt;0.05,x的&lt; 0.05,故常数项没通过t检验,x项通过了<br>F-statistic的p-value&lt; 0.05,通过了F检验<br>(3)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">y.res&lt;-resid(lm.sol); y.fit&lt;-predict(lm.sol)</span><br><span class="line">plot(y.res~y.fit)</span><br></pre></td></tr></table></figure></p><img src="/2019/01/10/R-Linear-regression/image010.png" title="ex3"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">y.rst&lt;-rstandard(lm.sol)</span><br><span class="line">plot(y.rst~y.fit)</span><br></pre></td></tr></table></figure><img src="/2019/01/10/R-Linear-regression/image011.png" title="ex3"><p>喇叭形，异方差的<br>(4)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lm2&lt;-lm(y~x,data=x)</span><br><span class="line">lm2_sq&lt;-update(lm2,sqrt(.)~.)</span><br><span class="line">summary(lm2_sq)</span><br></pre></td></tr></table></figure></p><img src="/2019/01/10/R-Linear-regression/Run7.png" title="ex3"><p>R-squared还较小，但残差明显变小了（0.7206）</p><hr><img src="/2019/01/10/R-Linear-regression/image012.png" title="ex3"><img src="/2019/01/10/R-Linear-regression/image013.png" title="ex3"><p>toothpaste&lt;-data.frame(<br>   X1=c(-0.05, 0.25,0.60,0,   0.25,0.20, 0.15,0.05,-0.15, 0.15,<br>         0.20, 0.10,0.40,0.45,0.35,0.30, 0.50,0.50, 0.40,-0.05,<br>        -0.05,-0.10,0.20,0.10,0.50,0.60,-0.05,0,    0.05, 0.55),<br>   X2=c( 5.50,6.75,7.25,5.50,7.00,6.50,6.75,5.25,5.25,6.00,<br>         6.50,6.25,7.00,6.90,6.80,6.80,7.10,7.00,6.80,6.50,<br>         6.25,6.00,6.50,7.00,6.80,6.80,6.50,5.75,5.80,6.80),<br>   Y =c( 7.38,8.51,9.52,7.50,9.33,8.28,8.75,7.87,7.10,8.00,<br>         7.89,8.15,9.10,8.86,8.90,8.87,9.26,9.00,8.75,7.95,<br>         7.65,7.27,8.00,8.50,8.75,9.21,8.27,7.67,7.93,9.26)<br>)<br>lm.sol&lt;-lm(Y~X1+X2,data = toothpaste)<br>summary(lm.sol)</p><h2 id="–-To-Be-Continued-–"><a href="#–-To-Be-Continued-–" class="headerlink" title="– To  Be  Continued –"></a><em>– To  Be  Continued –</em></h2><img src="/2019/01/10/R-Linear-regression/R.jpg" title="ex3"><p><code>&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0.5&quot;&gt;</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;R语言是一种十分方便的统计学编程语言，本文主要介绍通过R语言进行&lt;em&gt;线性回归&lt;/em&gt;，并列举了几个R语言在&lt;em&gt;线性回归&lt;/em&gt;中的应用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="R语言" scheme="http://myqaq.cn/child/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="线性回归" scheme="http://myqaq.cn/child/tags/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/"/>
    
  </entry>
  
  <entry>
    <title>Happy New Year</title>
    <link href="http://myqaq.cn/child/2018/12/31/happy-new-years/"/>
    <id>http://myqaq.cn/child/2018/12/31/happy-new-years/</id>
    <published>2018-12-31T11:37:19.000Z</published>
    <updated>2018-12-31T15:54:50.559Z</updated>
    
    <content type="html"><![CDATA[<p>8102年结束了，让我们展望一下2019吧。</p><a id="more"></a><hr><blockquote><p>南天寂静亮星少，北落师门赛流星。</p></blockquote><hr><p>写这篇博客的时候，播放器单曲循环着<em>Otokaze</em>的<em>《夏恋》</em>。收藏这首歌是在2016年年末的这个晚上，当时的我坐在图书馆四楼的自习室，对大学还处于懵懵懂懂的状态，胆怯、又对一切充满好奇。当时的我心里憧憬着：青春应该就应该是歌里的那样绚烂。一晃大学生活已经过去了两年半，真的体验了很多，也放弃了很多。渐渐的我也发现，即使是在大学，想坚持做一些东西的念头是那么的宝贵。<br><img src="/2018/12/31/happy-new-years/dream.png" title="dream"><br>在<em>《硅谷 4》</em>中，当<em>Richard</em>意识到自己真正想创造的是去中心化时，他没有再犹豫，而是果断放弃CEO开始构思新的算法。<br><img src="/2018/12/31/happy-new-years/Richard.jpeg" title="Richard & new Internet"><br>常常会懊恼，自己为什么没有学一学这个，从明天开始我一定要去做。然而现实是，明天的自己依旧会走上昨天的老路，开始一件事太难了，灵魂跑的再快，肉体还是那个惫懒的肉体。<br><img src="/2018/12/31/happy-new-years/truth.png" title="truth"><br>8102年于我来说是很梦幻的一年。这一年，我交出了第一个<em>MG</em>动画的科普视频，做出了第一份<em>MAD</em>并投稿，也确定了要<em>考研</em> 的目标，12月的我有了新的目标：<em>vlog</em> 和个人博客，如果是未来的我多多少少在这些方面有所突破的话，应该会感谢这个新年愿望吧。</p><h4 id="boom-烟花绚烂"><a href="#boom-烟花绚烂" class="headerlink" title="boom ~~ 烟花绚烂"></a>boom ~~ 烟花绚烂</h4><img src="/2018/12/31/happy-new-years/boom.jpg" title="花火"><h3 id="以上，祝2019年一切顺利"><a href="#以上，祝2019年一切顺利" class="headerlink" title="以上，祝2019年一切顺利"></a>以上，祝2019年一切顺利</h3><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;8102年结束了，让我们展望一下2019吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="夏姬八扯" scheme="http://myqaq.cn/child/tags/%E5%A4%8F%E5%A7%AC%E5%85%AB%E6%89%AF/"/>
    
  </entry>
  
  <entry>
    <title>markdown格式书写规则</title>
    <link href="http://myqaq.cn/child/2018/12/30/for-md/"/>
    <id>http://myqaq.cn/child/2018/12/30/for-md/</id>
    <published>2018-12-30T05:35:23.681Z</published>
    <updated>2019-01-11T05:20:53.394Z</updated>
    
    <content type="html"><![CDATA[<p>Markdown 是一种轻量级的「标记语言」，它的优点很多，广受博客爱好者的喜爱。本文介绍一些md格式的书写规则。</p><a id="more"></a><hr><blockquote><p>那么接下来是干货时间 QAQ</p></blockquote><hr><h1 id="一-标题"><a href="#一-标题" class="headerlink" title="一. 标题"></a>一. 标题</h1><blockquote><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#   一级标题</span><br><span class="line">##  二级标题</span><br><span class="line">### 三级标题</span><br></pre></td></tr></table></figure><h1 id="二-列表"><a href="#二-列表" class="headerlink" title="二. 列表"></a>二. 列表</h1><p>1.无序</p><blockquote><ul><li>这是一个列表</li><li>又是一个列表</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* 这是一个列表</span><br><span class="line">* 又是一个列表</span><br></pre></td></tr></table></figure><p>2.有序</p><blockquote><ol><li>这是一个序列</li><li>又是一个序列</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.这是一个序列</span><br><span class="line">2.又是一个序列</span><br></pre></td></tr></table></figure><h1 id="三-代码段"><a href="#三-代码段" class="headerlink" title="三. 代码段"></a>三. 代码段</h1><p>三个单引号调出代码块</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if(i.love == name)&#123;</span><br><span class="line">    print(i.love + &quot;,I love you&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">if(i.love == name)&#123;                </span><br><span class="line">    print(i.love + &quot;,I love you&quot;); </span><br><span class="line">&#125;  </span><br><span class="line">```</span><br></pre></td></tr></table></figure><h1 id="四-链接"><a href="#四-链接" class="headerlink" title="四. 链接"></a>四. 链接</h1><blockquote><p><a href="http://myqaq.cn">返回首页</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[返回首页](http://myqaq.cn)</span><br></pre></td></tr></table></figure><h1 id="五-图片"><a href="#五-图片" class="headerlink" title="五. 图片"></a>五. 图片</h1><blockquote><img src="/2018/12/30/for-md/nvwu.jpg" title="This is an example image"></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](for-md/nvwu.jpg)</span><br></pre></td></tr></table></figure><h1 id="六-引用及其嵌套"><a href="#六-引用及其嵌套" class="headerlink" title="六. 引用及其嵌套"></a>六. 引用及其嵌套</h1><blockquote><p>引用</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;引用</span><br></pre></td></tr></table></figure><blockquote><p>父类</p><blockquote><p>子类</p></blockquote></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;父类</span><br><span class="line">&gt;&gt;子类</span><br></pre></td></tr></table></figure><h1 id="七-转义"><a href="#七-转义" class="headerlink" title="七. 转义"></a>七. 转义</h1><blockquote><p># 转义</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\# 转义</span><br></pre></td></tr></table></figure><h1 id="八-自动刷新"><a href="#八-自动刷新" class="headerlink" title="八. 自动刷新"></a>八. 自动刷新</h1><p><code>&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0.2&quot;&gt;</code></p><h2 id="以上是MarkDown的基础用法，希望对大家有所帮助"><a href="#以上是MarkDown的基础用法，希望对大家有所帮助" class="headerlink" title="以上是MarkDown的基础用法，希望对大家有所帮助"></a>以上是MarkDown的基础用法，希望对大家有所帮助</h2><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Markdown 是一种轻量级的「标记语言」，它的优点很多，广受博客爱好者的喜爱。本文介绍一些md格式的书写规则。&lt;/p&gt;
    
    </summary>
    
    
      <category term="markdown" scheme="http://myqaq.cn/child/tags/markdown/"/>
    
      <category term="个人博客" scheme="http://myqaq.cn/child/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://myqaq.cn/child/2018/12/29/hello-world/"/>
    <id>http://myqaq.cn/child/2018/12/29/hello-world/</id>
    <published>2018-12-28T17:33:49.303Z</published>
    <updated>2019-04-04T03:10:02.318Z</updated>
    
    <content type="html"><![CDATA[<p> 这是我在Hexo发出的第一篇博客<br> <a id="more"></a></p><blockquote></blockquote><p> 主要是记录一下平时学的东西，目前还不知道会不会有后续的文章。<br>大致会上传一些学过的代码和资料，R语言、Perl、Java、H5，或许还会有Python。可能也会转一些学的美工知识。<br>那么就这样吧，下周要期末考试，还是复习要紧。<br><img src="https://gss2.bdstatic.com/-fo3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike116%2C5%2C5%2C116%2C38/sign=1176c8c3b299a9012f3853647cfc611e/b3fb43166d224f4a2ee267c403f790529922d1e9.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 这是我在Hexo发出的第一篇博客&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="个人博客" scheme="http://myqaq.cn/child/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
